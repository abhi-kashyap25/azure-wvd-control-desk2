import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AppAttachPackageOperations } from "../operationsInterfaces";
import { DesktopVirtualizationAPIClient } from "../desktopVirtualizationAPIClient";
import { AppAttachPackage, AppAttachPackageListByResourceGroupOptionalParams, AppAttachPackageListBySubscriptionOptionalParams, AppAttachPackageGetOptionalParams, AppAttachPackageGetResponse, AppAttachPackageCreateOrUpdateOptionalParams, AppAttachPackageCreateOrUpdateResponse, AppAttachPackageDeleteOptionalParams, AppAttachPackageUpdateOptionalParams, AppAttachPackageUpdateResponse } from "../models";
/** Class containing AppAttachPackageOperations operations. */
export declare class AppAttachPackageOperationsImpl implements AppAttachPackageOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class AppAttachPackageOperations class.
     * @param client Reference to the service client
     */
    constructor(client: DesktopVirtualizationAPIClient);
    /**
     * List App Attach packages in resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AppAttachPackageListByResourceGroupOptionalParams): PagedAsyncIterableIterator<AppAttachPackage>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List App Attach packages in subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: AppAttachPackageListBySubscriptionOptionalParams): PagedAsyncIterableIterator<AppAttachPackage>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Get an app attach package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appAttachPackageName The name of the App Attach package
     * @param options The options parameters.
     */
    get(resourceGroupName: string, appAttachPackageName: string, options?: AppAttachPackageGetOptionalParams): Promise<AppAttachPackageGetResponse>;
    /**
     * Create or update an App Attach package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appAttachPackageName The name of the App Attach package
     * @param appAttachPackage Object containing App Attach Package definitions.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, appAttachPackageName: string, appAttachPackage: AppAttachPackage, options?: AppAttachPackageCreateOrUpdateOptionalParams): Promise<AppAttachPackageCreateOrUpdateResponse>;
    /**
     * Remove an App Attach Package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appAttachPackageName The name of the App Attach package
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, appAttachPackageName: string, options?: AppAttachPackageDeleteOptionalParams): Promise<void>;
    /**
     * Update an App Attach Package
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appAttachPackageName The name of the App Attach package
     * @param options The options parameters.
     */
    update(resourceGroupName: string, appAttachPackageName: string, options?: AppAttachPackageUpdateOptionalParams): Promise<AppAttachPackageUpdateResponse>;
    /**
     * List App Attach packages in resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List App Attach packages in subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=appAttachPackageOperations.d.ts.map